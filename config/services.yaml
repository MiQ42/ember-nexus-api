# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  version: '%env(VERSION)%'
  anonymousUserUUID: '%env(ANONYMOUS_USER_UUID)%'
  pageSize:
    min: 5
    default: 25
    max: 100
  problemInstanceLinks:          # null can be replaced by links to redirect to external problem documentation sites
    404-not-found: null

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true    # Automatically injects dependencies in your services.
    autoconfigure: true  # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # OpenCypher event listeners

  Syndesi\CypherEntityManager\EventListener\OpenCypher\NodeCreateToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\NodeDeleteToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\NodeMergeToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\RelationCreateToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\RelationDeleteToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\RelationMergeToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\SimilarNodeQueueCreateToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\SimilarNodeQueueDeleteToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\SimilarNodeQueueMergeToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\SimilarRelationQueueCreateToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\SimilarRelationQueueDeleteToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\OpenCypher\SimilarRelationQueueMergeToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  # Neo4j event listeners

  Syndesi\CypherEntityManager\EventListener\Neo4j\NodeConstraintCreateToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\Neo4j\NodeConstraintDeleteToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\Neo4j\NodeIndexCreateToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\Neo4j\NodeIndexDeleteToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\Neo4j\RelationConstraintCreateToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\Neo4j\RelationConstraintDeleteToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\Neo4j\RelationIndexCreateToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

  Syndesi\CypherEntityManager\EventListener\Neo4j\RelationIndexDeleteToStatementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'Syndesi\CypherEntityManager\Event\ActionCypherElementToStatementEvent'
        method: 'onActionCypherElementToStatementEvent'

# tion events

  App\EventListener\ApiKeyCheckOnKernelRequestEventListener:
    tags:
      - name: kernel.event_listener
        event: 'kernel.request'
        method: 'onKernelRequest'

  App\EventListener\ExceptionEventListener:
    tags:
      - name: kernel.event_listener
        event: 'kernel.exception'
        method: 'onKernelException'

  App\EventListener\ElementToRawEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\ElementToRawEvent'
        method: 'onElementToRawEvent'

  App\EventListener\GenericPropertyElementDefragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\NodeElementDefragmentizeEvent'
        method: 'onNodeElementDefragmentizeEvent'
      - name: kernel.event_listener
        event: 'App\Event\RelationElementDefragmentizeEvent'
        method: 'onRelationElementDefragmentizeEvent'

  App\EventListener\GenericPropertyElementFragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\NodeElementFragmentizeEvent'
        method: 'onNodeElementFragmentizeEvent'
      - name: kernel.event_listener
        event: 'App\Event\RelationElementFragmentizeEvent'
        method: 'onRelationElementFragmentizeEvent'

  App\EventListener\CreatedPropertyElementFragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\NodeElementFragmentizeEvent'
        method: 'onNodeElementFragmentizeEvent'
      - name: kernel.event_listener
        event: 'App\Event\RelationElementFragmentizeEvent'
        method: 'onRelationElementFragmentizeEvent'

  App\EventListener\NamePropertyElementFragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\NodeElementFragmentizeEvent'
        method: 'onNodeElementFragmentizeEvent'
      - name: kernel.event_listener
        event: 'App\Event\RelationElementFragmentizeEvent'
        method: 'onRelationElementFragmentizeEvent'

  App\EventListener\UsernamePropertyElementFragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\NodeElementFragmentizeEvent'
        method: 'onNodeElementFragmentizeEvent'

  App\EventListener\NodeElementDefragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\NodeElementDefragmentizeEvent'
        method: 'onNodeElementDefragmentizeEvent'

  App\EventListener\NodeElementFragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\NodeElementFragmentizeEvent'
        method: 'onNodeElementFragmentizeEvent'

  App\EventListener\RawToElementEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\RawToElementEvent'
        method: 'onRawToElementEvent'

  App\EventListener\RelationElementDefragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\RelationElementDefragmentizeEvent'
        method: 'onRelationElementDefragmentizeEvent'

  App\EventListener\RelationElementFragmentizeEventListener:
    tags:
      - name: kernel.event_listener
        event: 'App\Event\RelationElementFragmentizeEvent'
        method: 'onRelationElementFragmentizeEvent'

  App\Factory\CypherEntityManagerFactory:
    arguments:
      $cypherAuth: '%env(CYPHER_AUTH)%'

  Syndesi\CypherEntityManager\Type\EntityManager:
    factory: ['@App\Factory\CypherEntityManagerFactory', 'createCypherEntityManager']

  App\Factory\MongoEntityManagerFactory:
    arguments:
      $mongoAuth: '%env(MONGO_AUTH)%'

  Syndesi\MongoEntityManager\Type\EntityManager:
    factory: ['@App\Factory\MongoEntityManagerFactory', 'createMongoEntityManager']

  App\Factory\ElasticEntityManagerFactory:
    arguments:
      $elasticAuth: '%env(ELASTIC_AUTH)%'

  Syndesi\ElasticEntityManager\Type\EntityManager:
    factory: ['@App\Factory\ElasticEntityManagerFactory', 'createElasticEntityManager']

  App\Factory\RedisFactory:
    arguments:
      $redisAuth: '%env(REDIS_AUTH)%'

  Redis:
    factory: ['@App\Factory\RedisFactory', 'createRedis']
    class: Redis
